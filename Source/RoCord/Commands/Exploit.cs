using Discord;
using Discord.Commands;
using Discord.Interactions;
using System.Net;
using System.IO;
using System.Text;
using System.Threading.Tasks;
using WeAreDevs_API;
using System.Linq;
using System;

namespace RoCord
{
    public class Exploit : InteractionModuleBase<SocketInteractionContext>
    {
        ExploitAPI WeAreDevs = new ExploitAPI();
        EmbedBuilder Embed = new EmbedBuilder();
        DirectoryInfo DirectoryInfo = new DirectoryInfo("scripts");

        [SlashCommand("attach", "Attaches RoCord to ROBLOX using WeAreDevs API.")]
        public async Task Attach()
        {
            if (!File.Exists("VMProtectSDK32.dll"))
                Index.DownloadVMP();

            if (WeAreDevs.isAPIAttached())
            {
                Embed.WithTitle("RoCord");
                Embed.WithDescription("Rocord is already attached to ROBLOX!");
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Orange);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await RespondAsync(embed: Embed.Build());
            }
            else
            {
                Embed.WithTitle("RoCord");
                Embed.WithDescription("RoCord is attempting to attach to ROBLOX...");
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Orange);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await RespondAsync(embed: Embed.Build());
                WeAreDevs.LaunchExploit();
            }
        }

        [SlashCommand("exec", "Execute lua code to ROBLOX from Discord.")]
        public async Task Execute([Remainder] string code)
        {
            if (WeAreDevs.isAPIAttached())
            {
                WeAreDevs.SendLuaScript(code);
                Embed.WithTitle("RoCord");
                Embed.WithDescription("Executed Code:");
                if (ASCIIEncoding.Unicode.GetByteCount(code) >= 1024)
                    Embed.AddField("RoCord.lua", Index.FileToBig);
                else Embed.AddField("RoCord.lua", Index.LuaSyntax(code));
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Green);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await RespondAsync(embed: Embed.Build());
            }
            else
            {
                Embed.WithTitle("RoCord");
                Embed.WithDescription("Please attach using the `/attach` command.");
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Orange);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await RespondAsync(embed: Embed.Build());
            }
        }

        [SlashCommand("execfile", "Execute lua/txt file to ROBLOX from Discord.")]
        public async Task ExecuteFile(IAttachment attachment)
        {
            if (WeAreDevs.isAPIAttached())
            {
                using (WebClient WebClient = new WebClient())
                {
                    WeAreDevs.SendLuaScript(WebClient.DownloadString(attachment.Url));
                    Embed.WithTitle("RoCord");
                    Embed.WithDescription("Executed file:");
                    if (ASCIIEncoding.Unicode.GetByteCount(WebClient.DownloadString(attachment.Url)) >= 1024)
                        Embed.AddField(attachment.Filename, Index.FileToBig);
                    else Embed.AddField(attachment.Filename, Index.LuaSyntax(WebClient.DownloadString(attachment.Url)));
                    Embed.WithThumbnailUrl(Index.Logo);
                    Embed.WithColor(Color.Green);
                    Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                    await RespondAsync(embed: Embed.Build());
                }
            }
            else
            {
                Embed.WithTitle("RoCord");
                Embed.WithDescription("Please attach using the `/attach` command.");
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Orange);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await RespondAsync(embed: Embed.Build());
            }
        }

        [SlashCommand("listscripts", "List all lua/txt files within the scripts/autoexec folder.")]
        public async Task ListScripts()
        {
            Directory.CreateDirectory("scripts");
            if (Directory.EnumerateFileSystemEntries("scripts").Any())
            {
                if (DirectoryInfo.GetFiles().Length >= 25)
                {
                    Embed.WithTitle("RoCord");
                    Embed.WithDescription("You have too many scripts in the folder to view.");
                    Embed.WithThumbnailUrl(Index.Logo);
                    Embed.WithColor(Color.Orange);
                    Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                    await RespondAsync(embed: Embed.Build());
                }
                else
                {
                    Embed.WithTitle("RoCord");
                    Embed.WithDescription("List of scripts:");
                    foreach (FileInfo file in DirectoryInfo.GetFiles("*.txt"))
                    {
                        if (ASCIIEncoding.Unicode.GetByteCount(File.ReadAllText($"{DirectoryInfo}/{file.Name}")) >= 1024)
                            Embed.AddField(file.Name.ToString(), Index.FileToBig);
                        else Embed.AddField(file.Name.ToString(), Index.LuaSyntax(File.ReadAllText($"{DirectoryInfo}/{file.Name}")));
                    }
                    foreach (FileInfo file in DirectoryInfo.GetFiles("*.lua"))
                    {
                        if (ASCIIEncoding.Unicode.GetByteCount(File.ReadAllText($"{DirectoryInfo}/{file.Name}")) >= 1024)
                            Embed.AddField(file.Name.ToString(), Index.FileToBig);
                        else Embed.AddField(file.Name.ToString(), Index.LuaSyntax(File.ReadAllText($"{DirectoryInfo}/{file.Name}")));
                    }
                    Embed.WithThumbnailUrl(Index.Logo);
                    Embed.WithColor(Color.Purple);
                    Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                    await RespondAsync(embed: Embed.Build());
                }
            }
        }

        [SlashCommand("viewscript", "View code from lua/txt files from the scripts/autoexec folder.")]
        public async Task ViewScript([Remainder] string file)
        {
            Directory.CreateDirectory("scripts");
            if (Directory.EnumerateFileSystemEntries(Index.ScriptsDirectory).Any())
            {
                if (File.Exists($"{DirectoryInfo}/{file}"))
                {
                    Embed.WithTitle("RoCord");
                    Embed.WithDescription("Script selected:");
                    if (ASCIIEncoding.Unicode.GetByteCount(File.ReadAllText($"{DirectoryInfo}/{file}")) >= 1024)
                        Embed.AddField(file, Index.FileToBig);
                    else Embed.AddField(file, Index.LuaSyntax(File.ReadAllText($"{DirectoryInfo}/{file}")));
                    Embed.WithThumbnailUrl(Index.Logo);
                    Embed.WithColor(Color.Green);
                    Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                    await RespondAsync(embed: Embed.Build());
                }
                else
                {
                    Embed.WithTitle("RoCord");
                    Embed.WithDescription($"The file `{file}` doesnt exsist!");
                    Embed.WithThumbnailUrl(Index.Logo);
                    Embed.WithColor(Color.Red);
                    Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                    await RespondAsync(embed: Embed.Build());
                }
            }
            else
            {
                Embed.WithTitle("RoCord");
                Embed.WithDescription("You have no saved scripts to select.");
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Orange);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await RespondAsync(embed: Embed.Build());
            }
        }

        [SlashCommand("execscript", "Execute lua/txt files from the scripts/autoexec folder.")]
        public async Task ExecuteScript([Remainder] string file)
        {
            Directory.CreateDirectory("scripts");
            if (WeAreDevs.isAPIAttached())
            {
                if (Directory.EnumerateFileSystemEntries(Index.ScriptsDirectory).Any())
                {
                    if (File.Exists($"{DirectoryInfo}/{file}"))
                    {
                        WeAreDevs.SendLuaScript(File.ReadAllText($"{DirectoryInfo}/{file}"));
                        Embed.WithTitle("RoCord");
                        Embed.WithDescription("Script executed:");
                        if (ASCIIEncoding.Unicode.GetByteCount(File.ReadAllText($"{DirectoryInfo}/{file}")) >= 1024)
                            Embed.AddField(file, Index.FileToBig);
                        else Embed.AddField(file, Index.LuaSyntax(File.ReadAllText($"{DirectoryInfo}/{file}")));
                        Embed.WithThumbnailUrl(Index.Logo);
                        Embed.WithColor(Color.Green);
                        Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                        await RespondAsync(embed: Embed.Build());
                    }
                    else
                    {
                        Embed.WithTitle("RoCord");
                        Embed.WithDescription($"The file `{file}` doesnt exsist!");
                        Embed.WithThumbnailUrl(Index.Logo);
                        Embed.WithColor(Color.Red);
                        Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                        await RespondAsync(embed: Embed.Build());
                    }
                }
                else
                {
                    Embed.WithTitle("RoCord");
                    Embed.WithDescription("You have no saved scripts to execute!");
                    Embed.WithThumbnailUrl(Index.Logo);
                    Embed.WithColor(Color.Orange);
                    Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                    await RespondAsync(embed: Embed.Build());
                }
            }
            else
            {
                Embed.WithTitle("RoCord");
                Embed.WithDescription($"Please attach using the `/attach` command.");
                Embed.WithThumbnailUrl(Index.Logo);
                Embed.WithColor(Color.Orange);
                Embed.WithFooter("RoCord", Index.Icon).WithTimestamp(DateTimeOffset.Now);
                await ReplyAsync(embed: Embed.Build());
            }
        }
    }
}